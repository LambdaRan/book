

条款13：以对象管理资源

把资源放进对象内，我们便可依赖C++的“析构函数自动调用的机制”确保资源被释放

获得资源后立刻放进管理对象内    
    ”以对象管理资源“ 观念常被称为 “资源获得时机便是初始化时机”
        （Resource Acquisitions Is Initialization；RAII）
管理对象运用析构函数确保资源被释放

一般使用智能指针来管理资源
    unique_ptr(auto_ptr)
    shared_ptr “引用计数型智能指针”（reference-counting smart pointer; RCSP）

智能指针内部使用delete来释放资源，因此不要使用智能指针来管理动态分配的数组资源
    （因为释放要用delete[]），可使用vector和string替代


请记住：
    为防止资源泄漏，请使用RAII对象，他们在构造函数中获得资源并在析构函数中释放资源
    两个常被使用的RAII class分别是shared_ptr和unique_ptr(auto_ptr)。前者通常是较佳选择，
        因为其copy行为比较直观。若选择auto_ptr复制动作会使它（被复制物）指向NULL；