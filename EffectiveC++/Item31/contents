
条款31：将文件间的依赖关系降至最低

pimpl idiom:(pinter to implementation)
    这种类内的指针名称往往就是pImpl
    将类分割为两个classes，一个提供接口，另一个负责实现该接口

以“声明的依存性”替换“定义的依存性”，那正是编译依存性最小化的本质：
    现实中让头文件尽可能自我满足，万一做不到，则让它与其它文件内的声明式（而非定义式）相依。

    如果使用object reference或object pointer可以完成任务，就不要使用objects。
    如果能够，尽量以class声明式替换class定义式。
    为声明式和定义式提供不同的头文件。
        声明式头文件命名：xxxfwd.h

pimpl idiom类被称为handle classes

另一个制作handle classes的办法为：abstract base class（抽象基类）
    称为：interface class 

    类内往往有factory（工厂）函数或virtual构造函数


Handle classes和interface classes解除了接口和实现之间的耦合关系，从而降低文件间的编译依存性。


请记住：
    支持“编译依存性最小化”的一般构想是：相依于声明式，不相依于定义式。
        基于此构想的两个手段是Handle classes和interface classes.
    程序库头文件应该以“完全且仅有声明式”的形式存在，这种做法是否涉及template都适用。