
条款29：为“异常安全”而努力是值得的

当抛出异常时，异常安全性的函数会：
    不泄漏任何资源
    不允许数据败坏

异常安全函数提供一下三个保证之一：
    基本承诺：如果异常抛出，程序内的任何事物仍然保持在有效状态下。
    强烈保证：如果异常抛出，程序状态不改变。
        要么成功，要么失败
    不抛掷异常

有个一般化的设计策略很典型的会导致强烈保证：copy and swap
    为你打算修改的对象做出一份副本，然后在那副本上做一切修改。若有任何修改动作抛出异常，
        原对象仍保持为改变状态。待所有改变成功后，再将修改过的那个副本和原对象在一个不抛异常
        的操作中置换（swap）；
    
pimpl idiom手法：（条款31）
    实现上通常将所有“隶属对象的数据”从原对象放进另一个对象内，然后赋于原对象一个指针（最好智能指针），
        指向那个所谓的实现对象。


请记住：
    异常安全函数即使发生异常也不会泄漏资源或允许任何数据结构败坏。
        这样的函数区分为三种可能的保证：基本型、强烈型、不抛异常型；
    “强烈保证”往往能够以copy-and-swap实现出来，但“强烈保证”并非对所有函数都可实现或具备实现意义。
    函数提供的“异常安全保证”通常最高只等于其所调用之各个函数的“异常安全保证”中的最弱者。