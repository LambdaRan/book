

条款30：透彻了解inlining的里里外外

过度热衷inlining会造成程序体积太大（对可用空间而言），即使拥有虚内存，inline造成的代码膨胀也会导致
    额外的换页行为，降低指令高速缓存装置的击中率，以及伴随这些而来的效率损失。

记住，inline只是对编译器的一个申请，不是强制命令。

条款46说friend函数也可以被定义与class内，如果真是这样，他们也是被隐喻声明为inline

编译器拒绝inline：
    太复杂函数（循环或递归）
    virtual函数
    “通过函数指针而进行的调用函数”

一开始先不要将任何函数声明为inline，或至少将 inlining施行范围局限在那些“一定成为inline”或“十分平淡无奇的函数身上”。
    记住：80-20经验法则。

请记住：
    将大多数inlining限制在小型、被频繁调用的函数身上。这可使日后的调试过程和二进制升级更容易，
        也可使潜在的代码膨胀问题最小化，使程序的速度提升机会更大。
    不要只因为function template出现在头文件，就将他们声明为inline。